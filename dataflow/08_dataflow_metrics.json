{
	"name": "08_dataflow_metrics",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "inputmetrics",
						"type": "DatasetReference"
					},
					"name": "metricstream"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "metricoutput",
						"type": "DatasetReference"
					},
					"name": "metriccleaned"
				}
			],
			"transformations": [
				{
					"name": "select1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          time as string,",
				"          resourceId as string,",
				"          category as string,",
				"          operationName as string,",
				"          operationVersion as string,",
				"          schemaVersion as string,",
				"          statusCode as integer,",
				"          statusText as string,",
				"          durationMs as integer,",
				"          callerIpAddress as string,",
				"          correlationId as string,",
				"          identity as (type as string, tokenHash as string, authorization as (action as string, roleAssignmentId as string, roleDefinitionId as string, principals as (id as string, type as string)[], denyAssignmentId as string, type as string, result as string, reason as string)[], requester as (appId as string, audience as string, objectId as string, tenantId as string, tokenIssuer as string)),",
				"          location as string,",
				"          properties as (accountName as string, userAgentHeader as string, etag as string, serviceType as string, objectKey as string, lastModifiedTime as string, metricResponseType as string, serverLatencyMs as integer, requestHeaderSize as integer, responseHeaderSize as integer, tlsVersion as string, sourceAccessTier as string, responseBodySize as integer),",
				"          uri as string,",
				"          protocol as string,",
				"          resourceType as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     documentForm: 'documentPerLine') ~> metricstream",
				"metricstream select(mapColumn(",
				"          Metrictime = time,",
				"          Category = category,",
				"          OperationName = operationName",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> metriccleaned"
			]
		}
	}
}